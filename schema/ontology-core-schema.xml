<?xml version="1.0" ?>
<schema name="golr" version="6.2">
  <types>
    <!--Unsplit string for when text needs to be dealt with atomically.-->
    <!--For example, faceted querying.-->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true"></fieldType>
    <!--Any string with spaces that needs to be treated for searching purposes.-->
    <!--This will be automatically used in cases where "searchable: true" has been-->
    <!--specified in the YAML.-->
    <fieldType name="text_eng" class="solr.TextField" positionIncrementGap="100" sortMissingLast="true">
      <analyzer type="index">
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="_" replacement=" "></charFilter>
        <tokenizer class="solr.StandardTokenizerFactory"></tokenizer>
        <filter class="solr.LowerCaseFilterFactory"></filter>
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="3" maxGramSize="15"></filter>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="_" replacement=" "></charFilter>
        <tokenizer class="solr.StandardTokenizerFactory"></tokenizer>
        <filter class="solr.LowerCaseFilterFactory"></filter>
      </analyzer>
    </fieldType>
    <fieldType name="text_std" class="solr.TextField" positionIncrementGap="100" sortMissingLast="true">
      <analyzer type="index">
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="_" replacement=" "></charFilter>
        <tokenizer class="solr.StandardTokenizerFactory"></tokenizer>
        <filter class="solr.LowerCaseFilterFactory"></filter>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="_" replacement=" "></charFilter>
        <tokenizer class="solr.StandardTokenizerFactory"></tokenizer>
        <filter class="solr.LowerCaseFilterFactory"></filter>
      </analyzer>
    </fieldType>
    <fieldType name="text_kw" class="solr.TextField" positionIncrementGap="100" sortMissingLast="true">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory"></tokenizer>
        <filter class="solr.LowerCaseFilterFactory"></filter>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory"></tokenizer>
        <filter class="solr.LowerCaseFilterFactory"></filter>
      </analyzer>
    </fieldType>
    <fieldType name="integer" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0" sortMissingLast="true"></fieldType>
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"></fieldType>
    <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"></fieldType>
    <fieldType name="long" class="solr.TrieLongField"></fieldType>
    <fieldType name="tdates" class="solr.TrieDateField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="6"></fieldType>
    <fieldType name="tlongs" class="solr.TrieLongField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="8"></fieldType>
    <fieldType name="tdoubles" class="solr.TrieDoubleField" positionIncrementGap="0" docValues="true" multiValued="true" precisionStep="8"></fieldType>
  </types>
  <fields>
    <!-- A special static/fixed (by YAML conf file) field all documents have. -->
    <field name="document_category" type="string" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!-- Required by Solr. -->
    <field name="_version_" type="long" multiValued="false" indexed="true" stored="true"></field>
    <!-- ontology: Term identifier. -->
    <field name="id" type="string" required="true" multiValued="false" indexed="true" stored="true"></field>
    <!-- ontology: Term definition. -->
    <field name="description" type="string" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!--A StandardTokenized version of description.-->
    <field name="description_std" type="text_std" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!--A EdgeNGram version of description.-->
    <field name="description_eng" type="text_eng" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!--A Keyword version of description.-->
    <field name="description_kw" type="text_kw" required="false" multiValued="false" indexed="true" stored="true"></field>
    <copyField source="description" dest="description_std"></copyField>
    <copyField source="description" dest="description_eng"></copyField>
    <copyField source="description" dest="description_kw"></copyField>
    <!-- ontology: Term namespace. -->
    <field name="source" type="string" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!-- ontology: Is the term obsolete? -->
    <field name="is_obsolete" type="boolean" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!-- ontology: Term comment. -->
    <field name="comment" type="string" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!--A StandardTokenized version of comment.-->
    <field name="comment_std" type="text_std" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!--A EdgeNGram version of comment.-->
    <field name="comment_eng" type="text_eng" required="false" multiValued="false" indexed="true" stored="true"></field>
    <!--A Keyword version of comment.-->
    <field name="comment_kw" type="text_kw" required="false" multiValued="false" indexed="true" stored="true"></field>
    <copyField source="comment" dest="comment_std"></copyField>
    <copyField source="comment" dest="comment_eng"></copyField>
    <copyField source="comment" dest="comment_kw"></copyField>
    <!-- ontology: Term synonyms. -->
    <field name="synonym" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A StandardTokenized version of synonym.-->
    <field name="synonym_std" type="text_std" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A EdgeNGram version of synonym.-->
    <field name="synonym_eng" type="text_eng" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A Keyword version of synonym.-->
    <field name="synonym_kw" type="text_kw" required="false" multiValued="true" indexed="true" stored="true"></field>
    <copyField source="synonym" dest="synonym_std"></copyField>
    <copyField source="synonym" dest="synonym_eng"></copyField>
    <copyField source="synonym" dest="synonym_kw"></copyField>
    <!-- ontology: Alternate term identifier. -->
    <field name="alternate_id" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Term that replaces this term. -->
    <field name="replaced_by" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Others terms you might want to look at. -->
    <field name="consider" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Special use collections of terms. -->
    <field name="subset" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Definition cross-reference. -->
    <field name="definition_xref" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Database cross-reference. -->
    <field name="database_xref" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Ancestral terms (is_a). -->
    <field name="isa_closure" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Ancestral terms (is_a). -->
    <field name="isa_closure_label" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A StandardTokenized version of isa_closure_label.-->
    <field name="isa_closure_label_std" type="text_std" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A EdgeNGram version of isa_closure_label.-->
    <field name="isa_closure_label_eng" type="text_eng" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A Keyword version of isa_closure_label.-->
    <field name="isa_closure_label_kw" type="text_kw" required="false" multiValued="true" indexed="true" stored="true"></field>
    <copyField source="isa_closure_label" dest="isa_closure_label_std"></copyField>
    <copyField source="isa_closure_label" dest="isa_closure_label_eng"></copyField>
    <copyField source="isa_closure_label" dest="isa_closure_label_kw"></copyField>
    <!-- Automatically created to capture mapping information -->
    <!-- between isa_(list|closure) and isa_closure_label.-->
    <!-- It is not indexed for searching (JSON blob), but may be useful to the client. -->
    <field name="isa_closure_map" type="string" required="false" multiValued="false" indexed="false" stored="true"></field>
    <!-- ontology: Ancestral terms (is_a/part_of). -->
    <field name="isa_partof_closure" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!-- ontology: Ancestral terms (is_a/part_of). -->
    <field name="isa_partof_closure_label" type="string" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A StandardTokenized version of isa_partof_closure_label.-->
    <field name="isa_partof_closure_label_std" type="text_std" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A EdgeNGram version of isa_partof_closure_label.-->
    <field name="isa_partof_closure_label_eng" type="text_eng" required="false" multiValued="true" indexed="true" stored="true"></field>
    <!--A Keyword version of isa_partof_closure_label.-->
    <field name="isa_partof_closure_label_kw" type="text_kw" required="false" multiValued="true" indexed="true" stored="true"></field>
    <copyField source="isa_partof_closure_label" dest="isa_partof_closure_label_std"></copyField>
    <copyField source="isa_partof_closure_label" dest="isa_partof_closure_label_eng"></copyField>
    <copyField source="isa_partof_closure_label" dest="isa_partof_closure_label_kw"></copyField>
    <!-- Automatically created to capture mapping information -->
    <!-- between isa_partof_(list|closure) and isa_partof_closure_label.-->
    <!-- It is not indexed for searching (JSON blob), but may be useful to the client. -->
    <field name="isa_partof_closure_map" type="string" required="false" multiValued="false" indexed="false" stored="true"></field>
  </fields>
  <uniqueKey>id</uniqueKey>
</schema>